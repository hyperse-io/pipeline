"use strict";(self.webpackChunk_hyperse_pipeline_docs=self.webpackChunk_hyperse_pipeline_docs||[]).push([[986],{3023:(o,e,n)=>{n.d(e,{R:()=>a,x:()=>c});var t=n(3696);const r={},i=t.createContext(r);function a(o){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function c(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(r):o.components||r:a(o.components),t.createElement(i.Provider,{value:e},o.children)}},4003:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"react-hook-form","title":"React Hook Form","description":"Here an example if you want to plug MuiColorInput to your form using React Hook Form.","source":"@site/docs/react-hook-form.md","sourceDirName":".","slug":"/react-hook-form","permalink":"/pipeline/docs/react-hook-form","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperse-io/pipeline/docs/react-hook-form.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Playground","permalink":"/pipeline/docs/playground"}}');var r=n(2540),i=n(3023);const a={},c="React Hook Form",s={},l=[];function d(o){const e={a:"a",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...o.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"react-hook-form",children:"React Hook Form"})}),"\n",(0,r.jsxs)(e.p,{children:["Here an example if you want to plug ",(0,r.jsx)(e.code,{children:"MuiColorInput"})," to your form using ",(0,r.jsx)(e.a,{href:"https://react-hook-form.com/",children:"React Hook Form"}),"."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-tsx",children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\nimport { MuiColorInput, matchIsValidColor } from 'mui-color-input';\nimport { Controller, useForm } from 'react-hook-form';\n\nconst App = () => {\n  const { control, handleSubmit } = useForm({\n    defaultValues: {\n      color: '#ffffff',\n    },\n  });\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"color\"\n        control={control}\n        rules={{ validate: matchIsValidColor }}\n        render={({ field, fieldState }) => (\n          <MuiColorInput\n            {...field}\n            format=\"hex\"\n            helperText={fieldState.invalid ? 'Color is invalid' : ''}\n            error={fieldState.invalid}\n          />\n        )}\n      />\n      <div>\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}>\n          Submit\n        </Button>\n      </div>\n    </form>\n  );\n};\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://codesandbox.io/s/react-hook-form-with-mui-color-input-94iiv1?fontsize=14&hidenavigation=1&theme=dark",children:(0,r.jsx)(e.img,{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit on CodeSandbox"})})})]})}function m(o={}){const{wrapper:e}={...(0,i.R)(),...o.components};return e?(0,r.jsx)(e,{...o,children:(0,r.jsx)(d,{...o})}):d(o)}}}]);